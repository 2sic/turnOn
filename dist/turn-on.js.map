{"version":3,"sources":["webpack://turn-on/./src/conditions/condition-function-name.ts","webpack://turn-on/./src/conditions/condition-function.ts","webpack://turn-on/./src/conditions/condition-maker.ts","webpack://turn-on/./src/conditions/condition-name.ts","webpack://turn-on/./src/conditions/exists-progress.ts","webpack://turn-on/./src/conditions/index.ts","webpack://turn-on/./src/configuration/config-helper.ts","webpack://turn-on/./src/configuration/configuration.ts","webpack://turn-on/./src/configuration/index.ts","webpack://turn-on/./src/constants.ts","webpack://turn-on/./src/debug.ts","webpack://turn-on/./src/index.ts","webpack://turn-on/./src/status/index.ts","webpack://turn-on/./src/status/status-summary.ts","webpack://turn-on/./src/status/status.ts","webpack://turn-on/./src/tags/config-tag-manager.ts","webpack://turn-on/./src/tags/config-tag.ts","webpack://turn-on/./src/tags/config-to-turn-on.ts","webpack://turn-on/./src/tags/index.ts","webpack://turn-on/./src/tags/tag-loader.ts","webpack://turn-on/./src/turnOn/index.ts","webpack://turn-on/./src/turnOn/settings.ts","webpack://turn-on/./src/turnOn/turn-on-root.ts","webpack://turn-on/./src/turnOn/turn-on.ts","webpack://turn-on/./src/watch-promise/condition-as-promise.ts","webpack://turn-on/./src/watch-promise/index.ts","webpack://turn-on/./src/watch-promise/promise-boolean-as-promise.ts","webpack://turn-on/webpack/bootstrap","webpack://turn-on/webpack/runtime/define property getters","webpack://turn-on/webpack/runtime/hasOwnProperty shorthand","webpack://turn-on/webpack/runtime/make namespace object","webpack://turn-on/webpack/startup"],"names":[],"mappings":"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","file":"turn-on.js","sourcesContent":["import { Condition } from '.';\r\nimport { createNameCondition } from './condition-name';\r\nimport { createFnCondition } from './condition-function';\r\n\r\nconst namedFnType = 'named fn';\r\n\r\n/**\r\n * Create a condition which waits for a function to exist, and then polls it till the result is ok.\r\n */\r\nexport function createFunctionNameCondition(key: string): Condition {\r\n  if(!key.endsWith('()')) throw `Tried to create Function-Name condition but that requires it to end with (), got ${key}`;\r\n\r\n  const keyWithoutBrackets = key.substring(0, key.length - 2);\r\n  let fnCondition: Condition;\r\n  const nameCondition = createNameCondition(keyWithoutBrackets);\r\n  return () => {\r\n\r\n    // As long as the name doesn't exist, check that and return that status\r\n    // But only do this till we have the fnCondition once, then skip\r\n    if(!fnCondition) {\r\n      const statusOfName = nameCondition();\r\n      if(!statusOfName.ready) return { ...statusOfName, type: namedFnType} ;\r\n\r\n      // Check if we really got a function - if not, assume all is ok and don't try to call\r\n      if(typeof(statusOfName.result) !== 'function') return { ...statusOfName, type: namedFnType };\r\n      \r\n      // Create the function-condition to use from now on. \r\n      fnCondition = createFnCondition(statusOfName.result as () => boolean);\r\n    }\r\n\r\n    // once the name exists, try to get the function\r\n    return { ...fnCondition(), type: namedFnType };\r\n  }\r\n}","import { Condition } from '.';\r\nimport { Status } from '..';\r\n\r\n/**\r\n * Create a condition based on a function which will be polled till it returns truthy\r\n */\r\nexport function createFnCondition(fn: () => boolean): Condition {\r\n  let name = fn.toString();\r\n  if (name && name.length > 25) name = name.substr(0, 25);\r\n  return () => { \r\n    return new Status('fn', fn(), '', name);\r\n  }\r\n}","import { Condition, ConditionRaw, createFnCondition, createNameCondition } from '.';\r\nimport { createFunctionNameCondition } from './condition-function-name';\r\n\r\n/**\r\n * Internal class to generate is-it-ready checkers\r\n */\r\nexport class ConditionMaker {\r\n\r\n  /**\r\n   * Make a new condition checker\r\n   */\r\n  public make(condition: ConditionRaw): Condition {\r\n    if (typeof(condition) === 'function')\r\n      return createFnCondition(condition);\r\n    \r\n    if (typeof(condition) === 'string')\r\n      return condition.endsWith('()')\r\n        ? createFunctionNameCondition(condition)\r\n        : createNameCondition(condition);\r\n  }\r\n}","import { Condition, ExistsProgress } from '.';\r\nimport { Status, windowName } from '..';\r\n\r\nconst statusType = 'window-key';\r\n\r\n/**\r\n * Create a checker which verifies if a key or key-sequence on window exists\r\n */\r\nexport function createNameCondition(key: string): Condition {\r\n  // empty-ish strings - always say it's done\r\n  if (!key) return () => new Status(statusType, true, 'empty key', key);\r\n  if (key === windowName) return () => new Status(statusType, true, 'no keys except maybe windows found', key);\r\n\r\n  return () => {\r\n    const exists = ExistsProgress.test(key);\r\n    if(exists.success) return new Status(statusType, true, 'all keys matched', key, exists.result);\r\n    return new Status(statusType, false, `Not all keys matched yet. So far '${exists.matchedKey}' worked.`, key);\r\n  }\r\n}","import { windowName } from '..';\r\n\r\nexport class ExistsProgress {\r\n  constructor(\r\n    public success: boolean,\r\n    public result: unknown,\r\n    public parts: number,\r\n    public partsFound: number,\r\n    public matchedKey?: string,\r\n  ) { }\r\n\r\n  static test(key: string): ExistsProgress {\r\n    if(!key) return new ExistsProgress(true, null, 0, 0);\r\n\r\n    const parts = key.split('.');\r\n    if(parts[0] !== windowName) throw `Key must start with '${windowName}.' but it's '${key}'`;\r\n\r\n    // Only contains window\r\n    if (parts.length == 1) return new ExistsProgress(true, null, 1, 1);\r\n\r\n    let current = window as any;\r\n    let match = windowName;\r\n    for (let i = 1; i < parts.length; i++) {\r\n      const part = parts[i];\r\n      current = current[part];\r\n      // found, so let's add to list of successful matches\r\n      match += '.' + part;\r\n\r\n      // if node not found, stop checking\r\n      if (!current) return new ExistsProgress(false, null, parts.length, i, match);\r\n    }\r\n    return new ExistsProgress(true, current, parts.length, parts.length);\r\n  }\r\n}","export * from './condition-type';\r\nexport * from './condition-maker';\r\n\r\nexport * from './condition-name';\r\nexport * from './condition-function';\r\nexport * from './condition-function-name';\r\n\r\nexport * from './exists-progress';","import { Progress1Loaded, ProgressError, TurnOnConfiguration } from '.';\r\nimport { TurnOnConfigurationRaw } from '..';\r\nimport { LogMode, Settings, LogError, LogDebug } from '../turnOn/settings';\r\n\r\nexport class ConfigHelper {\r\n\r\n  /**\r\n   * Create a configuration object which just contains an error\r\n   */\r\n  static createError(message: string): TurnOnConfiguration {\r\n    const result: TurnOnConfiguration = {\r\n      await: [],\r\n      debug: false,\r\n      run: '',\r\n      progress: ProgressError,\r\n      error: message\r\n    };\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Load a configuration from a string usually from an Html attribute\r\n   */\r\n  static load(value: string): TurnOnConfiguration {\r\n    let pretyped: TurnOnConfigurationRaw;\r\n    try {\r\n      pretyped = JSON.parse(value);\r\n    }\r\n    catch (ex) {\r\n      return ConfigHelper.createError(`detected configuration but cannot parse to json.`);\r\n    }\r\n    let configuration: TurnOnConfiguration;\r\n    try {\r\n      configuration = ConfigHelper.stabilize(pretyped);\r\n    }\r\n    catch (ex) { \r\n      return ConfigHelper.createError(`Error loading configuration, reason unknown.`)\r\n    }\r\n  \r\n    return configuration;\r\n  }\r\n\r\n  /**\r\n   * Import a raw configuration and make sure it's fully compliant\r\n   */\r\n  private static stabilize(raw: TurnOnConfigurationRaw): TurnOnConfiguration {\r\n    if(!raw) return ConfigHelper.createError('No config data found to process');\r\n    if(!raw.run) return ConfigHelper.createError(`Config didn't contain 'run' - it's required.`);\r\n    if(!raw.run.startsWith('window')) return ConfigHelper.createError(`run command must start with 'window.' but is:` + raw.run);\r\n    if(!raw.run.endsWith('()')) return ConfigHelper.createError(`run must be a function name and end with () but it's:` + raw.run);\r\n  \r\n    const awaits = Array.isArray(raw.await) \r\n          ? raw.await\r\n          : raw.await \r\n            ? [raw.await]\r\n            : [];\r\n  \r\n    // also always await the run command, but without the () as it shouldn't be called to detect if it's ready    \r\n    awaits.push(raw.run.substring(0, raw.run.length-2));\r\n  \r\n    const logMode: LogMode = (raw?.debug ?? false) ? LogError : LogDebug;\r\n\r\n    const stable: TurnOnConfiguration = {\r\n      await: awaits,\r\n      debug: raw.debug ?? false,\r\n      run: raw.run,\r\n      progress: Progress1Loaded,\r\n      data: raw.data || { }, // give empty object so a developer can see this would exist as an option\r\n      settings: { ...new Settings(), log: logMode, ...raw.settings }\r\n    }\r\n    return stable;\r\n  }\r\n}","import { Settings } from '../turnOn/settings';\r\nexport const Progress1Loaded = '1-loaded';\r\nexport const Progress2Watching = '2-watching';\r\nexport const Progress3Running = '3-running';\r\nexport const Progress4Completed = '4-completed';\r\nexport const Progress9Cancelled = '9-cancelled';\r\nexport const ProgressError = '9-error';\r\n\r\nexport type TurnOnProgres = typeof Progress1Loaded | typeof Progress2Watching  | typeof Progress3Running | typeof Progress4Completed | typeof Progress9Cancelled | typeof ProgressError ;\r\n\r\nexport interface TurnOnConfiguration {\r\n  /** Things to wait for - names on window (or sub-objects) or functions on window or sub-objects */\r\n  await: string[];\r\n\r\n  /** Special flag to log everything that's happening for extensive debugging */\r\n  debug: boolean;\r\n\r\n  /**\r\n   * What to run when all awaits have succeeded. \r\n   * The system will also wait for this to exist before it runs it. \r\n   */\r\n  run: string;\r\n\r\n  /** Information how far processing of this configuration has commenced */\r\n  progress: TurnOnProgres;\r\n\r\n  /** Possible error information */\r\n  error?: string;\r\n\r\n  /** Optional data to give the function once it starts */\r\n  data?: unknown;\r\n\r\n  /** Settings used for this turn-on */\r\n  settings?: Settings\r\n}\r\n","export * from '../turnOn/settings';\r\nexport * from './configuration';\r\nexport * from './config-helper';","\r\nexport const attrConfig = 'turn-on';\r\nexport const attrSkip = 'turn-on-skip';\r\n\r\nexport const windowName = 'window';\r\n\r\nexport const logPrefix = 'turn-on: ';","\r\n// const debug = true;\r\n\r\nimport { logPrefix } from './constants';\r\n\r\nexport function log(message: string, obj1?: unknown, obj2?: unknown): void {\r\n  if(!window.debugTurnOn) return;\r\n  if(obj2) console.log(logPrefix + message, obj1, obj2);\r\n  else if(obj1)  console.log(logPrefix + message, obj1);\r\n  else console.log(logPrefix + message);\r\n}","\r\nexport * from './constants';\r\nexport * from './debug';\r\n\r\nexport * from './status';\r\nexport * from './conditions';\r\nexport * from './tags';\r\nexport * from './watch-promise';\r\n\r\nimport { TurnOnRoot } from './turnOn';\r\nexport * from './window';\r\n\r\nif (!window.turnOn) window.turnOn = new TurnOnRoot();\r\nconst turnOn = window.turnOn as TurnOnRoot;\r\n\r\nturnOn.loader.activateObserver();\r\n","export * from './status';\r\nexport * from './status-summary';","import { Status } from '.';\r\n\r\n\r\nexport class StatusSummary extends Status {\r\n\r\n  constructor(details: Status[]) {\r\n    // no details provided, then assume ok\r\n    if (!details) details = [];\r\n\r\n    const ready = detectIfAllOk(details);\r\n\r\n    const message = details.length === 0\r\n      ? 'no conditions provided'\r\n      : ready\r\n        ? 'all ok'\r\n        : 'some conditions did not complete';\r\n    super('summary', ready, message, 'Summary');\r\n    this.details = details;\r\n  }\r\n\r\n  /** Details of each of the status received */\r\n  details: Status[]\r\n}\r\n\r\nfunction detectIfAllOk(details: Status[]) {\r\n  // some kind of error appeared, shouldn't be ok\r\n  if (!Array.isArray(details)) return false;\r\n\r\n  // count if all details have a ready-state\r\n  return (details.filter(stat => stat.ready).length == details.length)\r\n}","\r\nconst nameNotDefined = 'not set';\r\n\r\nexport class Status {\r\n  constructor(\r\n    /** The status type, like window-key, function, summary etc. */\r\n    public type: string,\r\n\r\n    /** Status if the check has been successful */\r\n    public ready: boolean,\r\n\r\n    /** Status message if provided */\r\n    public message: string, \r\n    \r\n    /** name of this status, to better point to which rule failed */\r\n    public name: string = nameNotDefined,\r\n    \r\n    /** result of a check - in some cases needed for next steps */\r\n    public result?: unknown\r\n    ) {\r\n  }\r\n\r\n  /** Amount of attempts tried till this  */\r\n  attempts? = 0;\r\n\r\n}\r\n","import { TurnOnConfiguration } from '../configuration';\r\nimport { attrConfig, attrSkip, log } from '..';\r\nimport { TurnOnRoot } from '../turnOn';\r\nimport { ConfigTag, convertConfigToTurnOn } from '.';\r\nimport { ConfigHelper, ProgressError } from '../configuration';\r\n\r\nexport class ConfigTagManager {\r\n  \r\n  public tags = new Array<ConfigTag>();\r\n\r\n  constructor(public root: TurnOnRoot) {\r\n    \r\n  }\r\n\r\n\r\n  tryToLoadTag(node: HTMLElement): void {\r\n    // Get config and skip if not relevant, or skip if already marked as in the queue\r\n    const attr = node?.getAttribute?.(attrConfig);\r\n    if(!attr) return;\r\n    const skip = node?.getAttribute?.(attrSkip);\r\n    log('skip', skip);\r\n    if(skip) return log('skip');\r\n\r\n    log('attr', attr);\r\n    const config = ConfigHelper.load(attr);\r\n    if(config.progress === ProgressError) {\r\n      console.error(config.error, node, attr);\r\n      return;\r\n    }\r\n    log('stable config')\r\n    this.add(node, config);\r\n  }\r\n  \r\n  /**\r\n   * \r\n   */\r\n  add(node: HTMLElement, config: TurnOnConfiguration): void {\r\n    log('add', node, config);\r\n    const tag = new ConfigTag(node, config);\r\n    this.tags.push(tag);\r\n    convertConfigToTurnOn(this.root, tag);\r\n  }\r\n\r\n  updateTags(): void {\r\n    log(`updateTags: ${this.tags.length}`);\r\n    this.tags.forEach((t) => t.syncDom())\r\n  }\r\n\r\n}","import { TurnOnConfiguration, TurnOnProgres } from '../configuration';\r\nimport { attrConfig, attrSkip } from '..';\r\nimport { log } from '../debug';\r\nimport { TurnOn } from '../turnOn/turn-on';\r\nimport { ProgressError } from '../configuration/configuration';\r\n\r\n\r\nexport class ConfigTag {\r\n\r\n  constructor(\r\n    public tag: HTMLElement,\r\n    public config: TurnOnConfiguration,\r\n    public turnOn?: TurnOn\r\n  ) \r\n  { \r\n    this.syncDom();\r\n  }\r\n\r\n  syncDom(): void {\r\n    log('syncDom', this);\r\n    const tag = this.tag;\r\n    // set skip if missing and update json in html if not current\r\n    // Do these checks to avoid to many DOM changes\r\n    if(!tag.getAttribute(attrSkip)) tag.setAttribute(attrSkip, \"skip\");\r\n    const currentSerialized = JSON.stringify(this.config);\r\n    if(tag.getAttribute(attrConfig) !== currentSerialized)\r\n      tag.setAttribute(attrConfig, currentSerialized);\r\n  }\r\n\r\n  progress(prog: TurnOnProgres): void {\r\n    this.config.progress = prog;\r\n    this.syncDom();\r\n  }\r\n\r\n  error(message: string): void {\r\n    this.config.progress = ProgressError;\r\n    this.config.error = message;\r\n    this.syncDom();\r\n    throw this.config.error;\r\n  }\r\n}","import { ConfigTag } from '.';\r\nimport { log, Status } from '..';\r\nimport { Progress2Watching, Progress3Running, Progress4Completed } from '../configuration';\r\nimport { TurnOnRoot } from '../turnOn';\r\nimport { ExistsProgress } from '../conditions/exists-progress';\r\n\r\n/**\r\n * \r\n */\r\nexport function convertConfigToTurnOn(root: TurnOnRoot, tag: ConfigTag): Promise<Status> {\r\n  const config = tag.config;\r\n  log('convert to turnon');\r\n  const turnOn = root.new(config.settings);\r\n  config.settings = turnOn.settings;\r\n  const promise = turnOn.await(config.await);\r\n  tag.progress(Progress2Watching);\r\n\r\n  promise.then(() => {\r\n    const run = config.run;\r\n    log('turn on success - will try to run ' + run);\r\n    tag.progress(Progress3Running);\r\n    if(!run.endsWith('()')) {\r\n      tag.error(`run should end with () but doesn't - can't continue`);\r\n      return;\r\n    }\r\n\r\n    const checkExists = ExistsProgress.test(run.substr(0, run.length - 2));\r\n\r\n    // if node not found, stop checking\r\n    if (!checkExists.success) {\r\n      tag.error(`Tried to find object parts for ${checkExists.matchedKey} but didn't get anything.`);\r\n      return;\r\n    }\r\n    if(typeof(checkExists.result) !== 'function') {\r\n      tag.error(`Got ${checkExists.partsFound} but it's not a function`);\r\n      return;\r\n    }\r\n\r\n    // now run it!\r\n    const fn = checkExists.result as (x: unknown) => unknown;\r\n    fn({ ...config, tag: tag });\r\n    tag.progress(Progress4Completed);\r\n  });\r\n  return promise;\r\n}\r\n\r\nconsole.log('hello!');","export * from './config-tag';\r\nexport * from './config-in-tag';\r\nexport * from './config-tag-manager';\r\nexport * from './config-to-turn-on';\r\nexport * from './tag-loader';","import { ConfigTagManager, log } from '..';\r\n\r\n/**\r\n * Options for the observer (which mutations to observe)\r\n */\r\nconst config : MutationObserverInit = { \r\n  attributes: false, \r\n  childList: true, \r\n  subtree: true \r\n};\r\n\r\n/**\r\n * In charge of loading all turn-on tags from the DOM, both at first load as well as on DOM changes\r\n */\r\nexport class TagLoader {\r\n\r\n  constructor(public tagManager: ConfigTagManager) {\r\n    this.scanExistingDom();\r\n  }\r\n\r\n  public scanExistingDom(): void {\r\n    log('scanExistingDom');\r\n    const tags = document.querySelectorAll(`[turn-on]`);\r\n    log('tags:', tags);\r\n    tags.forEach((t: HTMLElement) => this.tagManager.tryToLoadTag(t));\r\n  }\r\n\r\n  public activateObserver(): void {\r\n    log('load');\r\n  \r\n    const observer = new MutationObserver((mutations) => {\r\n      log('turnOn mutation');\r\n      // Loop through each changed item, check if it's something we want to initialize\r\n      mutations.forEach((m) => {\r\n        // Nodes added - let's check if it is a turn-on\r\n        if(m.type != 'childList') return;\r\n        log('hit children');\r\n\r\n        m.addedNodes.forEach((node: HTMLElement) => this.tagManager.tryToLoadTag(node));\r\n      });\r\n    });\r\n  \r\n    // observe document for tags which include this. ATM don't observe header\r\n    observer.observe(document.documentElement, config);\r\n  }\r\n\r\n}\r\n","\r\nexport * from './settings';\r\nexport * from './turn-on';\r\nexport * from './turn-on-root';\r\n","\r\n// this must be a simple const, otherwise the anotation below with typeof won't work\r\n// https://stackoverflow.com/questions/56263200/how-to-define-string-literal-union-type-from-constants-in-typescript\r\nexport const LogError = 'error';\r\nexport const LogDebug = 'debug';\r\nexport const LogSilent = 'silent';\r\n\r\nexport const FailSilent = 'silent';\r\nexport const FailResolve = 'resolve';\r\nexport const FailReject = 'reject';\r\nexport const DefaultName = 'turnOn';\r\n\r\nexport type LogMode = typeof LogError | typeof LogDebug | typeof LogSilent;\r\n\r\nexport class Settings {\r\n  /** the polling interval - defaults to 100 */\r\n  interval = 100;\r\n\r\n  /** polling attempts, defaults to 100 */\r\n  attempts = 100;\r\n \r\n  /** What to log into the console */\r\n  log: LogMode = LogError;\r\n\r\n  /**\r\n   * Failure mode, if by timeout it's not successful\r\n   * - reject (default)= use promise reject (which will throw an error if not handled)\r\n   * - resolve = use promise resolve and give a status back which says it's not complete\r\n   * - silent = don't complete the promise\r\n   */\r\n  failure: typeof FailReject | typeof FailResolve | typeof FailSilent = FailReject;\r\n\r\n  /** The name of this turnOn - to better track issues */\r\n  name = DefaultName;\r\n}","import { Settings, TurnOn } from '.';\r\nimport { TagLoader } from '..';\r\nimport { ConfigTagManager } from '../tags/config-tag-manager';\r\n\r\nexport class TurnOnRoot {\r\n  \r\n  tagManager: ConfigTagManager;\r\n\r\n  loader: TagLoader;\r\n\r\n  constructor()\r\n  {\r\n    this.tagManager = new ConfigTagManager(this);\r\n    this.loader = new TagLoader(this.tagManager);\r\n    console.log('turnOn v0.1 running - set window.debugTurnOn = true for debugging')\r\n  }\r\n\r\n  /**\r\n   * Create a new turnOn object.\r\n   * Mainly usefuly in global scenarios, to give it a separate name\r\n   */\r\n  new(nameOrSettings?: Partial<Settings>): TurnOn {\r\n    return new TurnOn(nameOrSettings);\r\n  }\r\n}","import { Settings, LogDebug, LogSilent } from '.';\r\nimport { DefaultName, FailReject, FailResolve, FailSilent } from './settings';\r\nimport { promiseBoolToStatus } from '../watch-promise/promise-boolean-as-promise';\r\nimport { ConditionAsPromise, ConditionMaker, ConditionRaw, Status, StatusSummary } from '..';\r\nimport { logPrefix } from '../constants';\r\n\r\nexport class TurnOn {\r\n\r\n  /** The settings applied to this turnOn */\r\n  public settings = new Settings();\r\n\r\n  /** Constructor with optional settings */\r\n  constructor(nameOrSettings?: Partial<Settings> | string) {\r\n    if (typeof nameOrSettings === 'string') {\r\n      nameOrSettings = {\r\n        name: nameOrSettings\r\n      };\r\n    }\r\n\r\n    if (nameOrSettings)\r\n      this.settings = { ...this.settings, ...nameOrSettings };\r\n\r\n    TurnOn.count++;\r\n  }\r\n\r\n  /**\r\n   * Create a new turnOn object.\r\n   * Mainly usefuly in global scenarios, to give it a separate name\r\n   */\r\n  new(nameOrSettings?: Partial<Settings>): TurnOn {\r\n    return new TurnOn(nameOrSettings);\r\n  }\r\n\r\n  public await(conditions: ConditionRaw | ConditionRaw[]): Promise<Status> {\r\n\r\n    // re-wrap to ensure we always work with an array\r\n    const conditionsArray = (Array.isArray(conditions)) ? conditions : [conditions];\r\n\r\n    // convert conditions to promises\r\n    const loadedCheckers = conditionsArray.map(c => {\r\n      // do this for non-promise conditions\r\n      if (Promise.resolve(c as unknown) === c) {\r\n        return promiseBoolToStatus(c);\r\n      } else {\r\n        const condition = this._conditionMaker.make(c);\r\n        const loaded = new ConditionAsPromise(condition, this.settings);\r\n        return loaded.asPromise();  \r\n      }\r\n    });\r\n\r\n    // keep the current turnOn-object for reference in methods\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    const thisKs = this;\r\n\r\n    // keep count as it was on start, to ensure it doesn't change any more till we log the error\r\n    const instanceCount = TurnOn.count;\r\n\r\n    const flattened = new Promise<StatusSummary>((resolve, reject) => { \r\n      // return a single promise for all inner promises which either fail or resolve\r\n      Promise.all(loadedCheckers).then(list => {\r\n\r\n        // get summary of all details infos\r\n        const summary = new StatusSummary(list);\r\n\r\n        // by default, log details about what failed\r\n        if (window.debugTurnOn || thisKs.settings.log === LogDebug || (!summary.ready && thisKs.settings.log !== LogSilent))\r\n          thisKs.logStatusList(summary.ready, instanceCount, thisKs.settings, list);\r\n\r\n        // if all is ok, resolve now\r\n        if (summary.ready === true) {\r\n          resolve(new StatusSummary(list));\r\n          return;\r\n        }\r\n\r\n        // depending on the need, either reject/error (default) or resolve with false\r\n        switch (thisKs.settings.failure){\r\n          case FailReject: reject(summary); break;\r\n          case FailResolve: resolve(summary); break;\r\n          case FailSilent: return;\r\n        }\r\n      })\r\n    });\r\n      \r\n    return flattened;\r\n  }\r\n\r\n  public logStatusList(success: boolean, id: number, settings: Settings, statusList: Status[]): void {\r\n    console.log(logPrefix + `#${id} `\r\n    + (settings.name !== DefaultName ? `\"${settings.name}\" ` : '')\r\n    + (success ? 'success!' : `couldn't complete because some conditions were not met. See details: `),\r\n     statusList);\r\n  }\r\n\r\n  private _conditionMaker = new ConditionMaker();\r\n\r\n  private static count = 0;\r\n}","import { Status } from '..';\r\nimport { Settings } from '../turnOn';\r\n\r\nconst promiseType = 'promise';\r\nexport class ConditionAsPromise {\r\n\r\n  public settings: Settings;\r\n\r\n  constructor(checkFunction: () => Status, settings: Settings) {\r\n    this.innerCheck = checkFunction;\r\n    this.settings = settings;\r\n  }\r\n\r\n  public lastStatus: Status = new Status(promiseType, false, 'condition not checked yet');\r\n  public attempts = 0;\r\n\r\n  /**\r\n   * Dummy innerCheck function - should be replaced in the constructor\r\n   */\r\n  public innerCheck(): Status { return new Status(promiseType, true, 'no condition defined') }\r\n\r\n  public check(): Status {\r\n    if (this.lastStatus.ready === true) return this.lastStatus;\r\n\r\n    // check and store\r\n    this.lastStatus = this.innerCheck();\r\n\r\n    return this.lastStatus;\r\n  }\r\n\r\n  public asPromise(): Promise<Status> {\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    const parent = this;\r\n    const checkCondition = function(resolve: (value: Status) => void, reject: (reason: unknown | null) => void) {\r\n      // If the condition is met, we're done! \r\n      const result = parent.check();\r\n\r\n      // if all is ok (true) then complete the promise\r\n      if(result.ready === true) {\r\n        resolve( { ...result, attempts: parent.attempts });\r\n        return;\r\n      }\r\n\r\n      if(parent.attempts++ >= parent.settings.attempts) {\r\n        resolve({ ...result, message: 'tried up to max attempts: ' + result.message, attempts: parent.attempts });\r\n        return;\r\n      }\r\n\r\n      // If the condition isn't met but the timeout hasn't elapsed, go again\r\n      setTimeout(checkCondition, parent.settings.interval, resolve, reject);\r\n    };\r\n\r\n    return new Promise(checkCondition)\r\n  }\r\n}\r\n","export * from './condition-as-promise';\r\nexport * from './promise-boolean-as-promise';","import { Status } from '..';\r\n\r\nexport function promiseBoolToStatus(boolPromise: Promise<boolean>): Promise<Status> {\r\n  return new Promise<Status>((resolve, reject) => {\r\n    boolPromise\r\n      .then(r => {\r\n        const result = r !== false;\r\n        resolve(new Status('bool-promise', result, 'from promise'));\r\n    })\r\n      .catch(reason => reject(reason));\r\n  });\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"./src/index.ts\");\n"],"sourceRoot":""}